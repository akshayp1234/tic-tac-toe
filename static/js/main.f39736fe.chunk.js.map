{"version":3,"sources":["Section1.js","App.js","reportWebVitals.js","index.js"],"names":["Section1","useState","turn","setTurn","Array","fill","cells","setCells","winner","setWinner","handleClick","num","squares","console","log","combos","across","down","diagnol","combo","forEach","pattern","checkForWinner","alert","Cell","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAyGeA,EArGE,WAChB,MAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAASG,MAAM,GAAGC,KAAK,KAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KAsCMC,EAAc,SAACC,GACpB,GAAmB,KAAfL,EAAMK,GAAV,CAKA,IAAIC,EAAO,YAAON,GAEL,MAATJ,GACHU,EAAQD,GAAO,IACfR,EAAQ,OAERS,EAAQD,GAAO,IACfR,EAAQ,MAEHU,QAAQC,IAAIF,GAnDI,SAACA,GACvB,IAAIG,EAAS,CACZC,OAAQ,CACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAERC,KAAM,CACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAERC,QAAS,CACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIT,IAAK,IAAIC,KAASJ,EACjBA,EAAOI,GAAOC,SAAQ,SAACC,GAEG,KAAxBT,EAAQS,EAAQ,KACQ,KAAxBT,EAAQS,EAAQ,KACQ,KAAxBT,EAAQS,EAAQ,KAIhBT,EAAQS,EAAQ,MAAQT,EAAQS,EAAQ,KACxCT,EAAQS,EAAQ,MAAQT,EAAQS,EAAQ,KAExCZ,EAAUG,EAAQS,EAAQ,QAuB7BC,CAAeV,GACfL,EAASK,QAhBRW,MAAM,oBAwBFC,EAAO,SAAC,GAAa,IAAXb,EAAU,EAAVA,IACf,OAAO,oBAAIc,UAAU,OAAOC,QAAS,kBAAMhB,EAAYC,IAAhD,SAAuDL,EAAMK,MAGlE,OACI,sBAAKc,UAAU,aAAf,mBACWvB,EACP,kCACI,+BACI,cAACsB,EAAD,CAAMb,IAAK,IACX,cAACa,EAAD,CAAMb,IAAK,IACX,cAACa,EAAD,CAAMb,IAAK,OAEf,+BACI,cAACa,EAAD,CAAMb,IAAK,IACX,cAACa,EAAD,CAAMb,IAAK,IACX,cAACa,EAAD,CAAMb,IAAK,OAEf,+BACI,cAACa,EAAD,CAAMb,IAAK,IACX,cAACa,EAAD,CAAMb,IAAK,IACX,cAACa,EAAD,CAAMb,IAAK,UAGlBH,GACT,qCACC,+BAAKA,EAAL,qBACA,wBAAQkB,QAAS,kBA/BpBjB,EAAU,WACVF,EAASH,MAAM,GAAGC,KAAK,MA8BpB,+BCtFUsB,MAVf,WAEE,OACE,qBAAKF,UAAU,MAAf,SAEE,cAAC,EAAD,OCKSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f39736fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css'\r\nimport './Section1.css'\r\nimport { useState } from 'react'\r\nconst Section1 = () => {\r\n\tconst [turn, setTurn] = useState('x');\r\n\tconst [cells, setCells] = useState(Array(9).fill(''));\r\n\tconst [winner, setWinner] = useState();\r\n\r\n\tconst checkForWinner = (squares) => {\r\n\t\tlet combos = {\r\n\t\t\tacross: [\r\n\t\t\t\t[0, 1, 2],\r\n\t\t\t\t[3, 4, 5],\r\n\t\t\t\t[6, 7, 8],\r\n\t\t\t],\r\n\t\t\tdown: [\r\n\t\t\t\t[0, 3, 6],\r\n\t\t\t\t[1, 4, 7],\r\n\t\t\t\t[2, 5, 8],\r\n\t\t\t],\r\n\t\t\tdiagnol: [\r\n\t\t\t\t[0, 4, 8],\r\n\t\t\t\t[2, 4, 6],\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\tfor (let combo in combos) {\r\n\t\t\tcombos[combo].forEach((pattern) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tsquares[pattern[0]] === '' ||\r\n\t\t\t\t\tsquares[pattern[1]] === '' ||\r\n\t\t\t\t\tsquares[pattern[2]] === ''\r\n\t\t\t\t) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tsquares[pattern[0]] === squares[pattern[1]] &&\r\n\t\t\t\t\tsquares[pattern[1]] === squares[pattern[2]]\r\n\t\t\t\t) {\r\n\t\t\t\t\tsetWinner(squares[pattern[0]]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (num) => {\r\n\t\tif (cells[num] !== '') {\r\n\t\t\talert('already clicked');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet squares = [...cells];\r\n\r\n\t\tif (turn === 'X') {\r\n\t\t\tsquares[num] = 'X';\r\n\t\t\tsetTurn('O');\r\n\t\t} else {\r\n\t\t\tsquares[num] = 'O';\r\n\t\t\tsetTurn('X');\r\n\t\t}\r\n        console.log(squares);\r\n\r\n\t\tcheckForWinner(squares);\r\n\t\tsetCells(squares);\r\n\t};\r\n\r\n\tconst handleRestart = () => {\r\n\t\tsetWinner(null);\r\n\t\tsetCells(Array(9).fill(''));\r\n\t};\r\n\r\n\tconst Cell = ({ num }) => {\r\n\t\treturn <td className=\"cell\" onClick={() => handleClick(num)}>{cells[num]}</td>;\r\n\t};\r\n\r\n    return (\r\n        <div className=\"App-header\">\r\n            Turn: {turn}\r\n            <table >\r\n                <tr>\r\n                    <Cell num={0}/>\r\n                    <Cell num={1}/>\r\n                    <Cell num={2}/>\r\n                </tr>\r\n                <tr>\r\n                    <Cell num={3}/>\r\n                    <Cell num={4}/>\r\n                    <Cell num={5}/>                    \r\n                </tr>\r\n                <tr>\r\n                    <Cell num={6}/>\r\n                    <Cell num={7}/>\r\n                    <Cell num={8}/>\r\n                </tr>\r\n            </table>\r\n            {winner && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h1>{winner} is the winner!</h1>\r\n\t\t\t\t\t<button onClick={() => handleRestart()}>Play Again</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section1\r\n","import './App.css';\nimport Section1 from './Section1.js'\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      \n      <Section1/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}